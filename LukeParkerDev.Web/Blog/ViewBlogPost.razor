@page "/blog/{*Slug}"

@using Markdig
@using LukeParkerDev.Web.Blog.Components

@inject IJSRuntime JS
@inject BlogService BlogService
@inject NavigationManager NavigationManager


<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-6">
    @if (_loading)
    {
        <MudProgressLinear Color="Color.Secondary" Indeterminate/>
    }
    else if (_blog is not null)
    {
        <SeoHeader Title="@_blog.Frontmatter.title" Overview="@_blog.Frontmatter.hook" Keywords="_blog.Frontmatter.categories.Concat(_blog.Frontmatter.series).Concat(_blog.Frontmatter.tags)" />

        <MudText Typo="Typo.h3">@_blog.Frontmatter.title</MudText>
        <MudText Typo="Typo.subtitle2">@_blog.Frontmatter.date</MudText>
        <div style="display: flex; justify-content: center; align-items: center; width: 100%">
            <BlogChipList Frontmatter="_blog.Frontmatter"/>
        </div>

        <div class="blog-markdown">
            @(new MarkupString(Markdown.ToHtml(_blog.Markdown)))
        </div>
        
        <MudDivider Class="my-6" />
        
        <div id="disqus_thread"></div>
    }
    else
    {
        <MudText Typo="Typo.body1" Color="Color.Warning">That post was not found</MudText>
    }

</MudContainer>

@code
{
    private bool _loading;

    private BlogPost? _blog;

    [Parameter]
    public string? Slug { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        _loading = true;

        _blog = await BlogService.GetPostAsync(Slug);

        _loading = false;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!_loading && _blog is not null)
        {
            await JS.InvokeVoidAsync("highlightBlogPostCode");
            await JS.InvokeVoidAsync("loadDisqus", NavigationManager.Uri, _blog.Frontmatter.slug, _blog.Frontmatter.title);
        }
    }
}
